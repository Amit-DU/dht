#!/usr/bin/env python

"""
Read in a simple file of the format
    epochtime	event	IP_address
where epochtime is an int, event is "join" or "fail" and IP_address is
something like "18.72.0.3" (such as generated by plupdown.py).
Generate a bunch of events corresponding to vnodes that might have
something to do with that plus a corresponding number of inserts.

We will still simulate by the "second".
"""

import sha
import sys
from utils import random_id, random_interval, make_chordID
import random
import getopt

def str2bigint(s):
    a = map(ord, s)
    v = 0L
    for d in a:
	v = v << 8
	v = v | d
    return v

inserted = {}
def random_blockid ():
    s = sha.sha("%d" % random_id ())
    id = str2bigint (s.digest ())
    while id in inserted:
	# Damn birthdays.
	s = sha.sha("%d" % random_id ())
	id = str2bigint (s.digest ())
    inserted[id] = 1
    return id


firsttime = None
lasttime  = 0

try:
    opts, cmdv = getopt.getopt (sys.argv[1:], 'N:n:s:v:')
except getopt.GetoptError:
    print >>sys.stderr, sys.argv[0], "[-Nnsv] eventsfile"
    sys.exit (1)
if len(cmdv) != 1:
    print >>sys.stderr, sys.argv[0], "[-Nnsv] eventsfile"
    sys.exit (1)

maxblocks = 1000
size = 8192
nodesforjoin = 250
nvnodes = 1
for o, a in opts:
    if o == '-n':
	maxblocks = int (a)
    elif o == '-N':
	nodesforjoin = int (a)
    elif o == '-s':
	size = int (a)
    elif o == '-v':
	print >>sys.stderr, "-v currently ignored!"
	nvnodes = int (a)

fh = open (cmdv[0])

# Control the "rate" at which blocks are inserted.
mu_i	= maxblocks / 10
sd_i	= maxblocks / 20

count = 0
insertok = 0
livenodes = {}
for line in fh.readlines ():
    (t, e, ip) = line.strip ().split ()

    # normalize time
    t = int (t)
    if not firsttime:
	firsttime = t
    t = t - firsttime

    if e == 'join':
	count += 1
	livenodes[ip] = 1
    elif ip in livenodes and count > 0 and (e == 'fail' or e == 'crash'):
	count -= 1
	del livenodes[ip]
    if count > nodesforjoin:
	insertok = 1

    if t != lasttime:
	if maxblocks > 0 and insertok > 0:
	    for nt in xrange(lasttime+1,t-1):
		# Insert a few blocks every now and then between
		# the last event and this one.
		ni = random_interval (mu_i, sd_i)
		while ni > 0 and maxblocks > 0:
		    print nt, "insert", random.choice(livenodes.keys ()), random_blockid (), size
		    ni -= 1
		    maxblocks -= 1
	lasttime = t
    print t, e, ip
